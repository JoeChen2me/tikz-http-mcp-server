# 使用Alpine Linux作为基础镜像，大幅减小体积
FROM alpine:3.19

# 设置环境变量
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PATH="/usr/local/bin:$PATH"

# 安装系统依赖和最小化TeX环境
RUN apk add --no-cache \
    # Python环境
    python3 \
    py3-pip \
    # 最小化LaTeX环境
    texlive-full \
    # ImageMagick用于图像转换
    imagemagick \
    imagemagick-pdf \
    # 字体支持
    font-noto-cjk \
    font-liberation \
    font-dejavu \
    font-noto \
    # 其他工具
    curl \
    wget \
    dumb-init \
    && rm -rf /var/cache/apk/*

# 修复ImageMagick策略以允许PDF转换
RUN sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-7/policy.xml || \
    sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml || true

# 创建应用目录
WORKDIR /app

# 复制应用文件
COPY tikz_http_server.py ./
COPY clean_images.py ./
COPY run.sh ./
RUN chmod +x run.sh

# 安装Python依赖
RUN python3 -m venv /opt/venv && \
    . /opt/venv/bin/activate && \
    pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir mcp starlette uvicorn click anyio

# 设置虚拟环境路径
ENV PATH="/opt/venv/bin:$PATH"

# 创建非root用户以提升安全性
RUN addgroup -g 1000 tikz && \
    adduser -D -s /bin/sh -u 1000 -G tikz tikz && \
    chown -R tikz:tikz /app
USER tikz

# 暴露端口
EXPOSE 3000

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "import urllib.request; urllib.request.urlopen('http://localhost:3000/mcp/').read()" || exit 1

# 启动命令
CMD ["dumb-init", "./run.sh"]